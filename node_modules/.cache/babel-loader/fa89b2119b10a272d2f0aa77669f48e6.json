{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\wordle-mongol\\\\src\\\\components\\\\grid\\\\CompletedRow.tsx\";\nimport { getGuessStatuses } from '../../lib/statuses';\nimport { Cell } from './Cell';\nimport { unicodeSplit } from '../../lib/words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompletedRow = _ref => {\n  let {\n    solution,\n    guess,\n    isRevealing\n  } = _ref;\n  const statuses = getGuessStatuses(solution, guess);\n  const splitGuess = unicodeSplit(guess);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center mb-1\",\n    children: splitGuess.map((letter, i) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: letter,\n      status: statuses[i],\n      position: i,\n      isRevealing: isRevealing,\n      isCompleted: true\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = CompletedRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompletedRow\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/wordle-mongol/src/components/grid/CompletedRow.tsx"],"names":["getGuessStatuses","Cell","unicodeSplit","CompletedRow","solution","guess","isRevealing","statuses","splitGuess","map","letter","i"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAQA,OAAO,MAAMC,YAAY,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAA4C;AACvE,QAAMC,QAAQ,GAAGP,gBAAgB,CAACI,QAAD,EAAWC,KAAX,CAAjC;AACA,QAAMG,UAAU,GAAGN,YAAY,CAACG,KAAD,CAA/B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,cACGG,UAAU,CAACC,GAAX,CAAe,CAACC,MAAD,EAASC,CAAT,kBACd,QAAC,IAAD;AAEE,MAAA,KAAK,EAAED,MAFT;AAGE,MAAA,MAAM,EAAEH,QAAQ,CAACI,CAAD,CAHlB;AAIE,MAAA,QAAQ,EAAEA,CAJZ;AAKE,MAAA,WAAW,EAAEL,WALf;AAME,MAAA,WAAW;AANb,OACOK,CADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlBM;KAAMR,Y","sourcesContent":["import { getGuessStatuses } from '../../lib/statuses'\r\nimport { Cell } from './Cell'\r\nimport { unicodeSplit } from '../../lib/words'\r\n\r\ntype Props = {\r\n  solution: string\r\n  guess: string\r\n  isRevealing?: boolean\r\n}\r\n\r\nexport const CompletedRow = ({ solution, guess, isRevealing }: Props) => {\r\n  const statuses = getGuessStatuses(solution, guess)\r\n  const splitGuess = unicodeSplit(guess)\r\n\r\n  return (\r\n    <div className=\"flex justify-center mb-1\">\r\n      {splitGuess.map((letter, i) => (\r\n        <Cell\r\n          key={i}\r\n          value={letter}\r\n          status={statuses[i]}\r\n          position={i}\r\n          isRevealing={isRevealing}\r\n          isCompleted\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}