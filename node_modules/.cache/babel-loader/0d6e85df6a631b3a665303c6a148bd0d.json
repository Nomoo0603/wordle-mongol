{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\wordle-mongol\\\\src\\\\components\\\\keyboard\\\\Key.tsx\";\nimport classnames from 'classnames';\nimport { REVEAL_TIME_MS } from '../../constants/settings';\nimport { getStoredIsHighContrastMode } from '../../lib/localStorage';\nimport { solution } from '../../lib/words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Key = _ref => {\n  let {\n    children,\n    status,\n    width = 40,\n    value,\n    onClick,\n    isRevealing\n  } = _ref;\n  const keyDelayMs = REVEAL_TIME_MS * solution.length;\n  const isHighContrast = getStoredIsHighContrastMode();\n  const classes = classnames('flex items-center justify-center rounded mx-0.5 text-xs font-bold cursor-pointer select-none dark:text-white', {\n    'transition ease-in-out': isRevealing,\n    'bg-slate-200 dark:bg-slate-600 hover:bg-slate-300 active:bg-slate-400': !status,\n    'bg-slate-400 dark:bg-slate-800 text-white': status === 'absent',\n    'bg-orange-500 hover:bg-orange-600 active:bg-orange-700 text-white': status === 'correct' && isHighContrast,\n    'bg-cyan-500 hover:bg-cyan-600 active:bg-cyan-700 text-white': status === 'present' && isHighContrast,\n    'bg-green-500 hover:bg-green-600 active:bg-green-700 text-white': status === 'correct' && !isHighContrast,\n    'bg-yellow-500 hover:bg-yellow-600 active:bg-yellow-700 text-white': status === 'present' && !isHighContrast\n  });\n  const styles = {\n    transitionDelay: isRevealing ? `${keyDelayMs}ms` : 'unset',\n    width: `${width}px`,\n    height: '58px'\n  };\n\n  const handleClick = event => {\n    onClick(value);\n    event.currentTarget.blur();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: styles,\n    \"aria-label\": `${value} ${status}`,\n    className: classes,\n    onClick: handleClick,\n    children: children || value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = Key;\n\nvar _c;\n\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/wordle-mongol/src/components/keyboard/Key.tsx"],"names":["classnames","REVEAL_TIME_MS","getStoredIsHighContrastMode","solution","Key","children","status","width","value","onClick","isRevealing","keyDelayMs","length","isHighContrast","classes","styles","transitionDelay","height","handleClick","event","currentTarget","blur"],"mappings":";AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,2BAAT,QAA4C,wBAA5C;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAWA,OAAO,MAAMC,GAAG,GAAG,QAON;AAAA,MAPO;AAClBC,IAAAA,QADkB;AAElBC,IAAAA,MAFkB;AAGlBC,IAAAA,KAAK,GAAG,EAHU;AAIlBC,IAAAA,KAJkB;AAKlBC,IAAAA,OALkB;AAMlBC,IAAAA;AANkB,GAOP;AACX,QAAMC,UAAU,GAAGV,cAAc,GAAGE,QAAQ,CAACS,MAA7C;AACA,QAAMC,cAAc,GAAGX,2BAA2B,EAAlD;AAEA,QAAMY,OAAO,GAAGd,UAAU,CACxB,8GADwB,EAExB;AACE,8BAA0BU,WAD5B;AAEE,6EACE,CAACJ,MAHL;AAIE,iDAA6CA,MAAM,KAAK,QAJ1D;AAKE,yEACEA,MAAM,KAAK,SAAX,IAAwBO,cAN5B;AAOE,mEACEP,MAAM,KAAK,SAAX,IAAwBO,cAR5B;AASE,sEACEP,MAAM,KAAK,SAAX,IAAwB,CAACO,cAV7B;AAWE,yEACEP,MAAM,KAAK,SAAX,IAAwB,CAACO;AAZ7B,GAFwB,CAA1B;AAkBA,QAAME,MAAM,GAAG;AACbC,IAAAA,eAAe,EAAEN,WAAW,GAAI,GAAEC,UAAW,IAAjB,GAAuB,OADtC;AAEbJ,IAAAA,KAAK,EAAG,GAAEA,KAAM,IAFH;AAGbU,IAAAA,MAAM,EAAE;AAHK,GAAf;;AAMA,QAAMC,WAAuD,GAAIC,KAAD,IAAW;AACzEV,IAAAA,OAAO,CAACD,KAAD,CAAP;AACAW,IAAAA,KAAK,CAACC,aAAN,CAAoBC,IAApB;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,KAAK,EAAEN,MADT;AAEE,kBAAa,GAAEP,KAAM,IAAGF,MAAO,EAFjC;AAGE,IAAA,SAAS,EAAEQ,OAHb;AAIE,IAAA,OAAO,EAAEI,WAJX;AAAA,cAMGb,QAAQ,IAAIG;AANf;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlDM;KAAMJ,G","sourcesContent":["import { ReactNode } from 'react'\r\nimport classnames from 'classnames'\r\nimport { CharStatus } from '../../lib/statuses'\r\nimport { REVEAL_TIME_MS } from '../../constants/settings'\r\nimport { getStoredIsHighContrastMode } from '../../lib/localStorage'\r\nimport { solution } from '../../lib/words'\r\n\r\ntype Props = {\r\n  children?: ReactNode\r\n  value: string\r\n  width?: number\r\n  status?: CharStatus\r\n  onClick: (value: string) => void\r\n  isRevealing?: boolean\r\n}\r\n\r\nexport const Key = ({\r\n  children,\r\n  status,\r\n  width = 40,\r\n  value,\r\n  onClick,\r\n  isRevealing,\r\n}: Props) => {\r\n  const keyDelayMs = REVEAL_TIME_MS * solution.length\r\n  const isHighContrast = getStoredIsHighContrastMode()\r\n\r\n  const classes = classnames(\r\n    'flex items-center justify-center rounded mx-0.5 text-xs font-bold cursor-pointer select-none dark:text-white',\r\n    {\r\n      'transition ease-in-out': isRevealing,\r\n      'bg-slate-200 dark:bg-slate-600 hover:bg-slate-300 active:bg-slate-400':\r\n        !status,\r\n      'bg-slate-400 dark:bg-slate-800 text-white': status === 'absent',\r\n      'bg-orange-500 hover:bg-orange-600 active:bg-orange-700 text-white':\r\n        status === 'correct' && isHighContrast,\r\n      'bg-cyan-500 hover:bg-cyan-600 active:bg-cyan-700 text-white':\r\n        status === 'present' && isHighContrast,\r\n      'bg-green-500 hover:bg-green-600 active:bg-green-700 text-white':\r\n        status === 'correct' && !isHighContrast,\r\n      'bg-yellow-500 hover:bg-yellow-600 active:bg-yellow-700 text-white':\r\n        status === 'present' && !isHighContrast,\r\n    }\r\n  )\r\n\r\n  const styles = {\r\n    transitionDelay: isRevealing ? `${keyDelayMs}ms` : 'unset',\r\n    width: `${width}px`,\r\n    height: '58px',\r\n  }\r\n\r\n  const handleClick: React.MouseEventHandler<HTMLButtonElement> = (event) => {\r\n    onClick(value)\r\n    event.currentTarget.blur()\r\n  }\r\n\r\n  return (\r\n    <button\r\n      style={styles}\r\n      aria-label={`${value} ${status}`}\r\n      className={classes}\r\n      onClick={handleClick}\r\n    >\r\n      {children || value}\r\n    </button>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}