{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\wordle-mongol\\\\src\\\\components\\\\alerts\\\\Alert.tsx\";\nimport { Fragment } from 'react';\nimport { Transition } from '@headlessui/react';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Alert = _ref => {\n  let {\n    isOpen,\n    message,\n    variant = 'error',\n    topMost = false\n  } = _ref;\n  const classes = classNames('fixed z-20 top-14 left-1/2 transform -translate-x-1/2 max-w-sm shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden', {\n    'bg-rose-500 text-white': variant === 'error',\n    'bg-blue-500 text-white': variant === 'success'\n  });\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    show: isOpen,\n    as: Fragment,\n    enter: \"ease-out duration-300 transition\",\n    enterFrom: \"opacity-0\",\n    enterTo: \"opacity-100\",\n    leave: \"transition ease-in duration-100\",\n    leaveFrom: \"opacity-100\",\n    leaveTo: \"opacity-0\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-center font-medium\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["C:/Users/DELL/OneDrive/wordle-mongol/src/components/alerts/Alert.tsx"],"names":["Fragment","Transition","classNames","Alert","isOpen","message","variant","topMost","classes"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AASA,OAAO,MAAMC,KAAK,GAAG,QAKR;AAAA,MALS;AACpBC,IAAAA,MADoB;AAEpBC,IAAAA,OAFoB;AAGpBC,IAAAA,OAAO,GAAG,OAHU;AAIpBC,IAAAA,OAAO,GAAG;AAJU,GAKT;AACX,QAAMC,OAAO,GAAGN,UAAU,CACxB,0JADwB,EAExB;AACE,8BAA0BI,OAAO,KAAK,OADxC;AAEE,8BAA0BA,OAAO,KAAK;AAFxC,GAFwB,CAA1B;AAQA,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAEF,MADR;AAEE,IAAA,EAAE,EAAEJ,QAFN;AAGE,IAAA,KAAK,EAAC,kCAHR;AAIE,IAAA,SAAS,EAAC,WAJZ;AAKE,IAAA,OAAO,EAAC,aALV;AAME,IAAA,KAAK,EAAC,iCANR;AAOE,IAAA,SAAS,EAAC,aAPZ;AAQE,IAAA,OAAO,EAAC,WARV;AAAA,2BAUE;AAAK,MAAA,SAAS,EAAEQ,OAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,iCAAb;AAAA,oBAAgDH;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAhCM;KAAMF,K","sourcesContent":["import { Fragment } from 'react'\r\nimport { Transition } from '@headlessui/react'\r\nimport classNames from 'classnames'\r\n\r\ntype Props = {\r\n  isOpen: boolean\r\n  message: string\r\n  variant?: 'success' | 'error'\r\n  topMost?: boolean\r\n}\r\n\r\nexport const Alert = ({\r\n  isOpen,\r\n  message,\r\n  variant = 'error',\r\n  topMost = false,\r\n}: Props) => {\r\n  const classes = classNames(\r\n    'fixed z-20 top-14 left-1/2 transform -translate-x-1/2 max-w-sm shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden',\r\n    {\r\n      'bg-rose-500 text-white': variant === 'error',\r\n      'bg-blue-500 text-white': variant === 'success',\r\n    }\r\n  )\r\n\r\n  return (\r\n    <Transition\r\n      show={isOpen}\r\n      as={Fragment}\r\n      enter=\"ease-out duration-300 transition\"\r\n      enterFrom=\"opacity-0\"\r\n      enterTo=\"opacity-100\"\r\n      leave=\"transition ease-in duration-100\"\r\n      leaveFrom=\"opacity-100\"\r\n      leaveTo=\"opacity-0\"\r\n    >\r\n      <div className={classes}>\r\n        <div className=\"p-2\">\r\n          <p className=\"text-sm text-center font-medium\">{message}</p>\r\n        </div>\r\n      </div>\r\n    </Transition>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}